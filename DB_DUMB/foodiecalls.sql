-- MySQL Script generated by MySQL Workbench
-- Tue Jan 16 17:56:28 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema foodiecalls
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema foodiecalls
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `foodiecalls` DEFAULT CHARACTER SET utf8 ;
USE `foodiecalls` ;

-- -----------------------------------------------------
-- Table `foodiecalls`.`user_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`user_info` (
  `user_info_id` INT(11) NOT NULL,
  `user_id` INT(11) NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `middle_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `profile_pic` VARCHAR(255) NULL,
  `short_bio` VARCHAR(255) NULL,
  `bio` VARCHAR(255) NULL,
  `facebook_username` VARCHAR(255) NULL,
  `twitter_handle` VARCHAR(255) NULL,
  `website` VARCHAR(255) NULL,
  `address` VARCHAR(255) NULL,
  PRIMARY KEY (`user_info_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`users` (
  `user_id` INT(11) NOT NULL,
  `username` VARCHAR(100) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `user_type` TINYINT(4) NULL,
  `email` VARCHAR(255) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  `user_info_user_info_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `user_info_user_info_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  INDEX `fk_users_user_info_idx` (`user_info_user_info_id` ASC),
  CONSTRAINT `fk_users_user_info`
    FOREIGN KEY (`user_info_user_info_id`)
    REFERENCES `foodiecalls`.`user_info` (`user_info_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`comments` (
  `comment_id` INT(11) NOT NULL,
  `user_id` INT(11) NULL,
  `comment_date` TIMESTAMP NULL,
  `comment` VARCHAR(300) NULL,
  `comment_parent` INT(11) NULL,
  `post_id` INT(11) NULL,
  PRIMARY KEY (`comment_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`site_settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`site_settings` (
  `site_id` INT(11) NOT NULL,
  `site_name` VARCHAR(255) NOT NULL,
  `site_logo` VARCHAR(255) NULL,
  `site_url` VARCHAR(255) NULL,
  `site_description` VARCHAR(200) NULL,
  `site_slogan` VARCHAR(255) NULL,
  `site_admin_email` VARCHAR(100) NULL,
  `site_banner_ad` VARCHAR(255) NULL,
  `post_per_page` INT(3) NULL,
  PRIMARY KEY (`site_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`item` (
  `item_id` INT(11) NOT NULL AUTO_INCREMENT,
  `item_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`item_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`product_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`product_item` (
  `product_item_id` INT(11) NOT NULL,
  `item_id` INT(11) NULL,
  `price` FLOAT(11) NULL,
  `price_variation` FLOAT(11) NULL,
  `comment_id` INT(11) NOT NULL,
  PRIMARY KEY (`product_item_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`item_catagory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`item_catagory` (
  `item_cat_id` INT(11) NOT NULL AUTO_INCREMENT,
  `item_cat_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`item_cat_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`product_variation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`product_variation` (
  `product_variation_id` INT(11) NOT NULL AUTO_INCREMENT,
  `product_item_id` INT(11) NULL,
  `variation_name` VARCHAR(255) NULL,
  `details` TEXT NULL,
  `product_variation_price` FLOAT(11) NULL,
  PRIMARY KEY (`product_variation_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`item_has_item_catagory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`item_has_item_catagory` (
  `item_item_id` INT(11) NOT NULL,
  `item_catagory_item_cat_id` INT(11) NOT NULL,
  PRIMARY KEY (`item_item_id`, `item_catagory_item_cat_id`),
  INDEX `fk_item_has_item_catagory_item_catagory1_idx` (`item_catagory_item_cat_id` ASC),
  INDEX `fk_item_has_item_catagory_item1_idx` (`item_item_id` ASC),
  CONSTRAINT `fk_item_has_item_catagory_item1`
    FOREIGN KEY (`item_item_id`)
    REFERENCES `foodiecalls`.`item` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_has_item_catagory_item_catagory1`
    FOREIGN KEY (`item_catagory_item_cat_id`)
    REFERENCES `foodiecalls`.`item_catagory` (`item_cat_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`item_catagory_has_product_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`item_catagory_has_product_item` (
  `item_catagory_item_cat_id` INT(11) NOT NULL,
  `product_item_product_item_id` INT(11) NOT NULL,
  PRIMARY KEY (`item_catagory_item_cat_id`, `product_item_product_item_id`),
  INDEX `fk_item_catagory_has_product_item_product_item1_idx` (`product_item_product_item_id` ASC),
  INDEX `fk_item_catagory_has_product_item_item_catagory1_idx` (`item_catagory_item_cat_id` ASC),
  CONSTRAINT `fk_item_catagory_has_product_item_item_catagory1`
    FOREIGN KEY (`item_catagory_item_cat_id`)
    REFERENCES `foodiecalls`.`item_catagory` (`item_cat_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_catagory_has_product_item_product_item1`
    FOREIGN KEY (`product_item_product_item_id`)
    REFERENCES `foodiecalls`.`product_item` (`product_item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`product_item_has_product_variation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`product_item_has_product_variation` (
  `product_item_product_item_id` INT(11) NOT NULL,
  `product_variation_product_variation_id` INT(11) NOT NULL,
  PRIMARY KEY (`product_item_product_item_id`, `product_variation_product_variation_id`),
  INDEX `fk_product_item_has_product_variation_product_variation1_idx` (`product_variation_product_variation_id` ASC),
  INDEX `fk_product_item_has_product_variation_product_item1_idx` (`product_item_product_item_id` ASC),
  CONSTRAINT `fk_product_item_has_product_variation_product_item1`
    FOREIGN KEY (`product_item_product_item_id`)
    REFERENCES `foodiecalls`.`product_item` (`product_item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_item_has_product_variation_product_variation1`
    FOREIGN KEY (`product_variation_product_variation_id`)
    REFERENCES `foodiecalls`.`product_variation` (`product_variation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`product_variation_has_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`product_variation_has_comments` (
  `product_variation_product_variation_id` INT(11) NOT NULL,
  `comments_comment_id` INT NOT NULL,
  PRIMARY KEY (`product_variation_product_variation_id`, `comments_comment_id`),
  INDEX `fk_product_variation_has_comments_comments1_idx` (`comments_comment_id` ASC),
  INDEX `fk_product_variation_has_comments_product_variation1_idx` (`product_variation_product_variation_id` ASC),
  CONSTRAINT `fk_product_variation_has_comments_product_variation1`
    FOREIGN KEY (`product_variation_product_variation_id`)
    REFERENCES `foodiecalls`.`product_variation` (`product_variation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_variation_has_comments_comments1`
    FOREIGN KEY (`comments_comment_id`)
    REFERENCES `foodiecalls`.`comments` (`comment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `foodiecalls`.`users_has_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `foodiecalls`.`users_has_comments` (
  `users_user_id` INT(11) NOT NULL,
  `users_user_info_user_info_id` INT NOT NULL,
  `comments_comment_id` INT(11) NOT NULL,
  PRIMARY KEY (`users_user_id`, `users_user_info_user_info_id`, `comments_comment_id`),
  INDEX `fk_users_has_comments_comments1_idx` (`comments_comment_id` ASC),
  INDEX `fk_users_has_comments_users1_idx` (`users_user_id` ASC, `users_user_info_user_info_id` ASC),
  CONSTRAINT `fk_users_has_comments_users1`
    FOREIGN KEY (`users_user_id` , `users_user_info_user_info_id`)
    REFERENCES `foodiecalls`.`users` (`user_id` , `user_info_user_info_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_comments_comments1`
    FOREIGN KEY (`comments_comment_id`)
    REFERENCES `foodiecalls`.`comments` (`comment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
